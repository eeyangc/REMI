// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// REMI_run
Rcpp::List REMI_run(std::string stringname1, std::string stringname2, std::string method, int nstep, arma::fvec gamseq, float eps, int bandwidth, float shrinkagefactor);
RcppExport SEXP _REMI_REMI_run(SEXP stringname1SEXP, SEXP stringname2SEXP, SEXP methodSEXP, SEXP nstepSEXP, SEXP gamseqSEXP, SEXP epsSEXP, SEXP bandwidthSEXP, SEXP shrinkagefactorSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type stringname1(stringname1SEXP);
    Rcpp::traits::input_parameter< std::string >::type stringname2(stringname2SEXP);
    Rcpp::traits::input_parameter< std::string >::type method(methodSEXP);
    Rcpp::traits::input_parameter< int >::type nstep(nstepSEXP);
    Rcpp::traits::input_parameter< arma::fvec >::type gamseq(gamseqSEXP);
    Rcpp::traits::input_parameter< float >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< int >::type bandwidth(bandwidthSEXP);
    Rcpp::traits::input_parameter< float >::type shrinkagefactor(shrinkagefactorSEXP);
    rcpp_result_gen = Rcpp::wrap(REMI_run(stringname1, stringname2, method, nstep, gamseq, eps, bandwidth, shrinkagefactor));
    return rcpp_result_gen;
END_RCPP
}
// REMI_run_Jiao
Rcpp::List REMI_run_Jiao(std::string stringname1, std::string stringname2, int nstep, float eps, int bandwidth, float shrinkagefactor);
RcppExport SEXP _REMI_REMI_run_Jiao(SEXP stringname1SEXP, SEXP stringname2SEXP, SEXP nstepSEXP, SEXP epsSEXP, SEXP bandwidthSEXP, SEXP shrinkagefactorSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type stringname1(stringname1SEXP);
    Rcpp::traits::input_parameter< std::string >::type stringname2(stringname2SEXP);
    Rcpp::traits::input_parameter< int >::type nstep(nstepSEXP);
    Rcpp::traits::input_parameter< float >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< int >::type bandwidth(bandwidthSEXP);
    Rcpp::traits::input_parameter< float >::type shrinkagefactor(shrinkagefactorSEXP);
    rcpp_result_gen = Rcpp::wrap(REMI_run_Jiao(stringname1, stringname2, nstep, eps, bandwidth, shrinkagefactor));
    return rcpp_result_gen;
END_RCPP
}
// pred_REMI
arma::mat pred_REMI(std::string stringname, Rcpp::CharacterVector rsname, arma::uvec A1_r, arma::uvec A2_r, int whCol, arma::vec betah);
RcppExport SEXP _REMI_pred_REMI(SEXP stringnameSEXP, SEXP rsnameSEXP, SEXP A1_rSEXP, SEXP A2_rSEXP, SEXP whColSEXP, SEXP betahSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type stringname(stringnameSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type rsname(rsnameSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type A1_r(A1_rSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type A2_r(A2_rSEXP);
    Rcpp::traits::input_parameter< int >::type whCol(whColSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type betah(betahSEXP);
    rcpp_result_gen = Rcpp::wrap(pred_REMI(stringname, rsname, A1_r, A2_r, whCol, betah));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_bicSsLasso
List rcpp_bicSsLasso(arma::fvec betah, arma::fvec s2, arma::fmat R, int nstep, float eps, int n);
RcppExport SEXP _REMI_rcpp_bicSsLasso(SEXP betahSEXP, SEXP s2SEXP, SEXP RSEXP, SEXP nstepSEXP, SEXP epsSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::fvec >::type betah(betahSEXP);
    Rcpp::traits::input_parameter< arma::fvec >::type s2(s2SEXP);
    Rcpp::traits::input_parameter< arma::fmat >::type R(RSEXP);
    Rcpp::traits::input_parameter< int >::type nstep(nstepSEXP);
    Rcpp::traits::input_parameter< float >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_bicSsLasso(betah, s2, R, nstep, eps, n));
    return rcpp_result_gen;
END_RCPP
}
// ReadPlinkFile
Rcpp::List ReadPlinkFile(std::string stringname);
RcppExport SEXP _REMI_ReadPlinkFile(SEXP stringnameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type stringname(stringnameSEXP);
    rcpp_result_gen = Rcpp::wrap(ReadPlinkFile(stringname));
    return rcpp_result_gen;
END_RCPP
}
// lasso_geno
Rcpp::List lasso_geno(std::string stringname, std::string method, int nstep, arma::fvec gamseq, float eps);
RcppExport SEXP _REMI_lasso_geno(SEXP stringnameSEXP, SEXP methodSEXP, SEXP nstepSEXP, SEXP gamseqSEXP, SEXP epsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type stringname(stringnameSEXP);
    Rcpp::traits::input_parameter< std::string >::type method(methodSEXP);
    Rcpp::traits::input_parameter< int >::type nstep(nstepSEXP);
    Rcpp::traits::input_parameter< arma::fvec >::type gamseq(gamseqSEXP);
    Rcpp::traits::input_parameter< float >::type eps(epsSEXP);
    rcpp_result_gen = Rcpp::wrap(lasso_geno(stringname, method, nstep, gamseq, eps));
    return rcpp_result_gen;
END_RCPP
}
// lasso
Rcpp::List lasso(arma::mat X, arma::vec Y, arma::vec X_var, int nstep, double eps);
RcppExport SEXP _REMI_lasso(SEXP XSEXP, SEXP YSEXP, SEXP X_varSEXP, SEXP nstepSEXP, SEXP epsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type X_var(X_varSEXP);
    Rcpp::traits::input_parameter< int >::type nstep(nstepSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    rcpp_result_gen = Rcpp::wrap(lasso(X, Y, X_var, nstep, eps));
    return rcpp_result_gen;
END_RCPP
}
// bicSsLasso_Jiao
List bicSsLasso_Jiao(arma::fvec ytilde, arma::fmat Sigma, int nstep, float eps, int n, float sigma2);
RcppExport SEXP _REMI_bicSsLasso_Jiao(SEXP ytildeSEXP, SEXP SigmaSEXP, SEXP nstepSEXP, SEXP epsSEXP, SEXP nSEXP, SEXP sigma2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::fvec >::type ytilde(ytildeSEXP);
    Rcpp::traits::input_parameter< arma::fmat >::type Sigma(SigmaSEXP);
    Rcpp::traits::input_parameter< int >::type nstep(nstepSEXP);
    Rcpp::traits::input_parameter< float >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< float >::type sigma2(sigma2SEXP);
    rcpp_result_gen = Rcpp::wrap(bicSsLasso_Jiao(ytilde, Sigma, nstep, eps, n, sigma2));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_REMI_REMI_run", (DL_FUNC) &_REMI_REMI_run, 8},
    {"_REMI_REMI_run_Jiao", (DL_FUNC) &_REMI_REMI_run_Jiao, 6},
    {"_REMI_pred_REMI", (DL_FUNC) &_REMI_pred_REMI, 6},
    {"_REMI_rcpp_bicSsLasso", (DL_FUNC) &_REMI_rcpp_bicSsLasso, 6},
    {"_REMI_ReadPlinkFile", (DL_FUNC) &_REMI_ReadPlinkFile, 1},
    {"_REMI_lasso_geno", (DL_FUNC) &_REMI_lasso_geno, 5},
    {"_REMI_lasso", (DL_FUNC) &_REMI_lasso, 5},
    {"_REMI_bicSsLasso_Jiao", (DL_FUNC) &_REMI_bicSsLasso_Jiao, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_REMI(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
